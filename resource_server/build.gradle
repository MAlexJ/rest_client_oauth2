buildscript {
	new BufferedReader(new FileReader(file('../gradle.properties')))
			.withCloseable { reader ->
				String line
				while ((line = reader.readLine()) != null) {
					println(line)
					String name = line.substring(0, line.indexOf('='))
					String value = line.substring(line.indexOf('=') + 1)
					project.ext.set(name, value)
				}
			}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
	id "com.github.ben-manes.versions" version "${benManesDependencyVersion}"
}

group = "${buildGroup}"
version = "${buildVersion}"

java {
	sourceCompatibility = "${javaVersion}"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
